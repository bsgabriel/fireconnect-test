name: Release and Publish

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Extract version from merged branch name
        run: |
          MERGE_COMMIT=$(git log -1 --pretty=%B)
          VERSION=$(echo "$MERGE_COMMIT" | grep -oE 'release/[0-9]+\.[0-9]+\.[0-9]+' | cut -d'/' -f2)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Configure Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Authenticate to GitHub using token
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GH_PUSH_TOKEN }}@github.com/${{ github.repository }}

      - name: Update POM version
        run: mvn versions:set -DnewVersion=${{ env.VERSION }}

      - name: Update CHANGELOG and commit release
        run: |
          echo "version: ${{ env.VERSION }}"
          sed -i "s/Current/${{ env.VERSION }}/g" CHANGELOG.md
          git add pom.xml CHANGELOG.md
          git commit -m "Release version ${{ env.VERSION }}"
          git tag v${{ env.VERSION }}

      - name: Set up Maven Central Repository
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

#      - name: Publish to Maven Central
#        run: |
#          export GPG_TTY=$(tty)
#          mvn --batch-mode deploy --settings .github/maven-settings.xml -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }}
#        env:
#          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}

      - name: Set next snapshot version
        run: |
          awk '/^# Changelog/ { print; print ""; print "## Current\n"; next } 1' CHANGELOG.md > temp && mv temp CHANGELOG.md
          git add pom.xml CHANGELOG.md
          git commit -m "Prepare for next development cycle"

      - name: Push all changes and tags
        run: |
          git push origin main --follow-tags

      - name: Extract changelog entry for GitHub Release
        id: extract_changelog
        run: |
          VERSION=${{ env.VERSION }}
          {
            echo "## $VERSION"
            awk "/^## $VERSION/{flag=1; next} /^## /{flag=0} flag" CHANGELOG.md
          } > body.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: v${{ env.VERSION }}
          body_path: body.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
